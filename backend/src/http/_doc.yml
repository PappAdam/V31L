openapi: "3.0.3"
info:
  title: SafeChat API Docs
  version: "1.0"

tags:
  - name: Auth
    description: Authenticating Users
  - name: Logs
    description: Logging for debug
  - name: Invitations
    description: Invitation management for joining chats

components:
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: "testuser"
        password:
          type: string
          example: "SecurePass123"
    AuthSuccess:
      type: object
      properties:
        message:
          type: string
          example: "Success"
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR..."
    ServerError:
      type: object
      properties:
        message:
          type: string
          example: "Server error"
        CreateSuccess:
      type: object
      required:
        - result
        - type
        - invId
      properties:
        result:
          type: string
          enum: ["Success"]
        type:
          type: string
          enum: ["Create"]
        invId:
          type: string
          example: "abc123"
    JoinSuccess:
      type: object
      required:
        - result
        - type
        - chatId
      properties:
        result:
          type: string
          enum: ["Success"]
        type:
          type: string
          enum: ["Join"]
        chatId:
          type: string
          example: "chat456"
    InviteError:
      type: object
      required:
        - result
        - message
      properties:
        result:
          type: string
          enum: ["Error"]
        message:
          type: string
          enum:
            - "Invalid Request"
            - "Non-existent User-Chat pair"
            - "Invalid Invitation"
          example: "Invalid Request"

  responses:
    AuthSuccess:
      description: Login successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AuthSuccess"
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ServerError"
    CreateSuccess:
      description: Invitation created successfully
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateSuccess"
    JoinSuccess:
      description: Joined chat successfully
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/JoinSuccess"
    InviteError:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InviteError"

paths:
  /auth/login:
    post:
      summary: Login an existing user
      tags: [Auth]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCredentials"
      responses:
        200:
          $ref: "#/components/responses/AuthSuccess"
        400:
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid credentials"
        500:
          $ref: "#/components/responses/ServerError"

  /auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCredentials"
      responses:
        200:
          $ref: "#/components/responses/AuthSuccess"
        400:
          description: Authentication error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User with username already exists"
        500:
          $ref: "#/components/responses/ServerError"
  /auth/refresh:
    post:
      summary: Refresh a user's token
      tags: [Auth]
      security:
        - BearerToken: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "A valid token"
        401:
          description: Token error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid or expired token | No token provided"

  /log/auth:
    get:
      summary: Log authentication details (Supports all HTTP methods)
      tags: [Logs]
      security:
        - BearerToken: []
      responses:
        200:
          description: Authentication details logged
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logged auth details on server console."

  /inv/create:
    post:
      summary: Create an invitation
      tags: [Invitations]
      security:
        - BearerToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - key
                - chatId
              properties:
                key:
                  type: string
                  example: "join123"
                chatId:
                  type: string
                  example: "chat456"
      responses:
        201:
          $ref: "#/components/responses/CreateSuccess"
        400:
          $ref: "#/components/responses/InviteError"
        500:
          $ref: "#/components/responses/ServerError"

  /inv/join:
    post:
      summary: Join a chat using an invitation
      tags: [Invitations]
      security:
        - BearerToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - key
                - invId
              properties:
                key:
                  type: string
                  example: "key789"
                invId:
                  type: string
                  example: "invite012"
      responses:
        201:
          $ref: "#/components/responses/JoinSuccess"
        400:
          $ref: "#/components/responses/InviteError"
        500:
          $ref: "#/components/responses/ServerError"